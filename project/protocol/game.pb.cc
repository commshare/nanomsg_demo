// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msg {

namespace {

const ::google::protobuf::Descriptor* net_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  net_msg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_game_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_game_2eproto() {
  protobuf_AddDesc_game_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game.proto");
  GOOGLE_CHECK(file != NULL);
  net_msg_descriptor_ = file->message_type(0);
  static const int net_msg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, v_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, s_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, data_),
  };
  net_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      net_msg_descriptor_,
      net_msg::internal_default_instance(),
      net_msg_offsets_,
      -1,
      -1,
      -1,
      sizeof(net_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      net_msg_descriptor_, net_msg::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_game_2eproto() {
  net_msg_default_instance_.Shutdown();
  delete net_msg_reflection_;
}

void protobuf_InitDefaults_game_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  net_msg_default_instance_.DefaultConstruct();
  net_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_game_2eproto_once_);
void protobuf_InitDefaults_game_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_game_2eproto_once_,
                 &protobuf_InitDefaults_game_2eproto_impl);
}
void protobuf_AddDesc_game_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_game_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ngame.proto\022\003msg\"K\n\007net_msg\022\t\n\001v\030\001 \001(\005\022"
    "\014\n\004m_id\030\002 \001(\005\022\014\n\004s_id\030\003 \001(\005\022\013\n\003opt\030\004 \001(\005"
    "\022\014\n\004data\030\005 \001(\tb\006proto3", 102);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_game_2eproto_once_);
void protobuf_AddDesc_game_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_game_2eproto_once_,
                 &protobuf_AddDesc_game_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_2eproto {
  StaticDescriptorInitializer_game_2eproto() {
    protobuf_AddDesc_game_2eproto();
  }
} static_descriptor_initializer_game_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int net_msg::kVFieldNumber;
const int net_msg::kMIdFieldNumber;
const int net_msg::kSIdFieldNumber;
const int net_msg::kOptFieldNumber;
const int net_msg::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

net_msg::net_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.net_msg)
}

void net_msg::InitAsDefaultInstance() {
}

net_msg::net_msg(const net_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.net_msg)
}

void net_msg::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&v_, 0, reinterpret_cast<char*>(&opt_) -
    reinterpret_cast<char*>(&v_) + sizeof(opt_));
  _cached_size_ = 0;
}

net_msg::~net_msg() {
  // @@protoc_insertion_point(destructor:msg.net_msg)
  SharedDtor();
}

void net_msg::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void net_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* net_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return net_msg_descriptor_;
}

const net_msg& net_msg::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<net_msg> net_msg_default_instance_;

net_msg* net_msg::New(::google::protobuf::Arena* arena) const {
  net_msg* n = new net_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void net_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.net_msg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(net_msg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<net_msg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(v_, opt_);
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool net_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.net_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 v = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &v_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (tag == 16) {
         parse_m_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_s_id;
        break;
      }

      // optional int32 s_id = 3;
      case 3: {
        if (tag == 24) {
         parse_s_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_opt;
        break;
      }

      // optional int32 opt = 4;
      case 4: {
        if (tag == 32) {
         parse_opt:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // optional string data = 5;
      case 5: {
        if (tag == 42) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "msg.net_msg.data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.net_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.net_msg)
  return false;
#undef DO_
}

void net_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.net_msg)
  // optional int32 v = 1;
  if (this->v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->v(), output);
  }

  // optional int32 m_id = 2;
  if (this->m_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  // optional int32 s_id = 3;
  if (this->s_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->s_id(), output);
  }

  // optional int32 opt = 4;
  if (this->opt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->opt(), output);
  }

  // optional string data = 5;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msg.net_msg.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:msg.net_msg)
}

::google::protobuf::uint8* net_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msg.net_msg)
  // optional int32 v = 1;
  if (this->v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->v(), target);
  }

  // optional int32 m_id = 2;
  if (this->m_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  // optional int32 s_id = 3;
  if (this->s_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->s_id(), target);
  }

  // optional int32 opt = 4;
  if (this->opt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->opt(), target);
  }

  // optional string data = 5;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msg.net_msg.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:msg.net_msg)
  return target;
}

size_t net_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.net_msg)
  size_t total_size = 0;

  // optional int32 v = 1;
  if (this->v() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->v());
  }

  // optional int32 m_id = 2;
  if (this->m_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m_id());
  }

  // optional int32 s_id = 3;
  if (this->s_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->s_id());
  }

  // optional int32 opt = 4;
  if (this->opt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->opt());
  }

  // optional string data = 5;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void net_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.net_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const net_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const net_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.net_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.net_msg)
    UnsafeMergeFrom(*source);
  }
}

void net_msg::MergeFrom(const net_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.net_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void net_msg::UnsafeMergeFrom(const net_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.v() != 0) {
    set_v(from.v());
  }
  if (from.m_id() != 0) {
    set_m_id(from.m_id());
  }
  if (from.s_id() != 0) {
    set_s_id(from.s_id());
  }
  if (from.opt() != 0) {
    set_opt(from.opt());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void net_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.net_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void net_msg::CopyFrom(const net_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.net_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool net_msg::IsInitialized() const {

  return true;
}

void net_msg::Swap(net_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void net_msg::InternalSwap(net_msg* other) {
  std::swap(v_, other->v_);
  std::swap(m_id_, other->m_id_);
  std::swap(s_id_, other->s_id_);
  std::swap(opt_, other->opt_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata net_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = net_msg_descriptor_;
  metadata.reflection = net_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// net_msg

// optional int32 v = 1;
void net_msg::clear_v() {
  v_ = 0;
}
::google::protobuf::int32 net_msg::v() const {
  // @@protoc_insertion_point(field_get:msg.net_msg.v)
  return v_;
}
void net_msg::set_v(::google::protobuf::int32 value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:msg.net_msg.v)
}

// optional int32 m_id = 2;
void net_msg::clear_m_id() {
  m_id_ = 0;
}
::google::protobuf::int32 net_msg::m_id() const {
  // @@protoc_insertion_point(field_get:msg.net_msg.m_id)
  return m_id_;
}
void net_msg::set_m_id(::google::protobuf::int32 value) {
  
  m_id_ = value;
  // @@protoc_insertion_point(field_set:msg.net_msg.m_id)
}

// optional int32 s_id = 3;
void net_msg::clear_s_id() {
  s_id_ = 0;
}
::google::protobuf::int32 net_msg::s_id() const {
  // @@protoc_insertion_point(field_get:msg.net_msg.s_id)
  return s_id_;
}
void net_msg::set_s_id(::google::protobuf::int32 value) {
  
  s_id_ = value;
  // @@protoc_insertion_point(field_set:msg.net_msg.s_id)
}

// optional int32 opt = 4;
void net_msg::clear_opt() {
  opt_ = 0;
}
::google::protobuf::int32 net_msg::opt() const {
  // @@protoc_insertion_point(field_get:msg.net_msg.opt)
  return opt_;
}
void net_msg::set_opt(::google::protobuf::int32 value) {
  
  opt_ = value;
  // @@protoc_insertion_point(field_set:msg.net_msg.opt)
}

// optional string data = 5;
void net_msg::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& net_msg::data() const {
  // @@protoc_insertion_point(field_get:msg.net_msg.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void net_msg::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.net_msg.data)
}
void net_msg::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.net_msg.data)
}
void net_msg::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.net_msg.data)
}
::std::string* net_msg::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:msg.net_msg.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* net_msg::release_data() {
  // @@protoc_insertion_point(field_release:msg.net_msg.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void net_msg::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:msg.net_msg.data)
}

inline const net_msg* net_msg::internal_default_instance() {
  return &net_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg

// @@protoc_insertion_point(global_scope)
