// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msg {

namespace {

const ::google::protobuf::Descriptor* game_start_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  game_start_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* game_end_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  game_end_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* sit_up_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sit_up_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* sit_down_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sit_down_msg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_game_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_game_2eproto() {
  protobuf_AddDesc_game_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game.proto");
  GOOGLE_CHECK(file != NULL);
  game_start_msg_descriptor_ = file->message_type(0);
  static const int game_start_msg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(game_start_msg, state_),
  };
  game_start_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      game_start_msg_descriptor_,
      game_start_msg::internal_default_instance(),
      game_start_msg_offsets_,
      -1,
      -1,
      -1,
      sizeof(game_start_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(game_start_msg, _internal_metadata_));
  game_end_msg_descriptor_ = file->message_type(1);
  static const int game_end_msg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(game_end_msg, state_),
  };
  game_end_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      game_end_msg_descriptor_,
      game_end_msg::internal_default_instance(),
      game_end_msg_offsets_,
      -1,
      -1,
      -1,
      sizeof(game_end_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(game_end_msg, _internal_metadata_));
  sit_up_msg_descriptor_ = file->message_type(2);
  static const int sit_up_msg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sit_up_msg, uid_),
  };
  sit_up_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      sit_up_msg_descriptor_,
      sit_up_msg::internal_default_instance(),
      sit_up_msg_offsets_,
      -1,
      -1,
      -1,
      sizeof(sit_up_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sit_up_msg, _internal_metadata_));
  sit_down_msg_descriptor_ = file->message_type(3);
  static const int sit_down_msg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sit_down_msg, uid_),
  };
  sit_down_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      sit_down_msg_descriptor_,
      sit_down_msg::internal_default_instance(),
      sit_down_msg_offsets_,
      -1,
      -1,
      -1,
      sizeof(sit_down_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sit_down_msg, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      game_start_msg_descriptor_, game_start_msg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      game_end_msg_descriptor_, game_end_msg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      sit_up_msg_descriptor_, sit_up_msg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      sit_down_msg_descriptor_, sit_down_msg::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_game_2eproto() {
  game_start_msg_default_instance_.Shutdown();
  delete game_start_msg_reflection_;
  game_end_msg_default_instance_.Shutdown();
  delete game_end_msg_reflection_;
  sit_up_msg_default_instance_.Shutdown();
  delete sit_up_msg_reflection_;
  sit_down_msg_default_instance_.Shutdown();
  delete sit_down_msg_reflection_;
}

void protobuf_InitDefaults_game_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  game_start_msg_default_instance_.DefaultConstruct();
  game_end_msg_default_instance_.DefaultConstruct();
  sit_up_msg_default_instance_.DefaultConstruct();
  sit_down_msg_default_instance_.DefaultConstruct();
  game_start_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
  game_end_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
  sit_up_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
  sit_down_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_game_2eproto_once_);
void protobuf_InitDefaults_game_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_game_2eproto_once_,
                 &protobuf_InitDefaults_game_2eproto_impl);
}
void protobuf_AddDesc_game_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_game_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ngame.proto\022\003msg\"\037\n\016game_start_msg\022\r\n\005s"
    "tate\030\001 \001(\005\"\035\n\014game_end_msg\022\r\n\005state\030\001 \001("
    "\005\"\031\n\nsit_up_msg\022\013\n\003uid\030\001 \001(\005\"\033\n\014sit_down"
    "_msg\022\013\n\003uid\030\001 \001(\005b\006proto3", 145);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_game_2eproto_once_);
void protobuf_AddDesc_game_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_game_2eproto_once_,
                 &protobuf_AddDesc_game_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_2eproto {
  StaticDescriptorInitializer_game_2eproto() {
    protobuf_AddDesc_game_2eproto();
  }
} static_descriptor_initializer_game_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int game_start_msg::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

game_start_msg::game_start_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.game_start_msg)
}

void game_start_msg::InitAsDefaultInstance() {
}

game_start_msg::game_start_msg(const game_start_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.game_start_msg)
}

void game_start_msg::SharedCtor() {
  state_ = 0;
  _cached_size_ = 0;
}

game_start_msg::~game_start_msg() {
  // @@protoc_insertion_point(destructor:msg.game_start_msg)
  SharedDtor();
}

void game_start_msg::SharedDtor() {
}

void game_start_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* game_start_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return game_start_msg_descriptor_;
}

const game_start_msg& game_start_msg::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<game_start_msg> game_start_msg_default_instance_;

game_start_msg* game_start_msg::New(::google::protobuf::Arena* arena) const {
  game_start_msg* n = new game_start_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void game_start_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.game_start_msg)
  state_ = 0;
}

bool game_start_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.game_start_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 state = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.game_start_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.game_start_msg)
  return false;
#undef DO_
}

void game_start_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.game_start_msg)
  // optional int32 state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:msg.game_start_msg)
}

::google::protobuf::uint8* game_start_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msg.game_start_msg)
  // optional int32 state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:msg.game_start_msg)
  return target;
}

size_t game_start_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.game_start_msg)
  size_t total_size = 0;

  // optional int32 state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void game_start_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.game_start_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const game_start_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const game_start_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.game_start_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.game_start_msg)
    UnsafeMergeFrom(*source);
  }
}

void game_start_msg::MergeFrom(const game_start_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.game_start_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void game_start_msg::UnsafeMergeFrom(const game_start_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void game_start_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.game_start_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void game_start_msg::CopyFrom(const game_start_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.game_start_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool game_start_msg::IsInitialized() const {

  return true;
}

void game_start_msg::Swap(game_start_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void game_start_msg::InternalSwap(game_start_msg* other) {
  std::swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata game_start_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = game_start_msg_descriptor_;
  metadata.reflection = game_start_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// game_start_msg

// optional int32 state = 1;
void game_start_msg::clear_state() {
  state_ = 0;
}
::google::protobuf::int32 game_start_msg::state() const {
  // @@protoc_insertion_point(field_get:msg.game_start_msg.state)
  return state_;
}
void game_start_msg::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:msg.game_start_msg.state)
}

inline const game_start_msg* game_start_msg::internal_default_instance() {
  return &game_start_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int game_end_msg::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

game_end_msg::game_end_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.game_end_msg)
}

void game_end_msg::InitAsDefaultInstance() {
}

game_end_msg::game_end_msg(const game_end_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.game_end_msg)
}

void game_end_msg::SharedCtor() {
  state_ = 0;
  _cached_size_ = 0;
}

game_end_msg::~game_end_msg() {
  // @@protoc_insertion_point(destructor:msg.game_end_msg)
  SharedDtor();
}

void game_end_msg::SharedDtor() {
}

void game_end_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* game_end_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return game_end_msg_descriptor_;
}

const game_end_msg& game_end_msg::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<game_end_msg> game_end_msg_default_instance_;

game_end_msg* game_end_msg::New(::google::protobuf::Arena* arena) const {
  game_end_msg* n = new game_end_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void game_end_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.game_end_msg)
  state_ = 0;
}

bool game_end_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.game_end_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 state = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.game_end_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.game_end_msg)
  return false;
#undef DO_
}

void game_end_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.game_end_msg)
  // optional int32 state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:msg.game_end_msg)
}

::google::protobuf::uint8* game_end_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msg.game_end_msg)
  // optional int32 state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:msg.game_end_msg)
  return target;
}

size_t game_end_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.game_end_msg)
  size_t total_size = 0;

  // optional int32 state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void game_end_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.game_end_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const game_end_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const game_end_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.game_end_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.game_end_msg)
    UnsafeMergeFrom(*source);
  }
}

void game_end_msg::MergeFrom(const game_end_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.game_end_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void game_end_msg::UnsafeMergeFrom(const game_end_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void game_end_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.game_end_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void game_end_msg::CopyFrom(const game_end_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.game_end_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool game_end_msg::IsInitialized() const {

  return true;
}

void game_end_msg::Swap(game_end_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void game_end_msg::InternalSwap(game_end_msg* other) {
  std::swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata game_end_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = game_end_msg_descriptor_;
  metadata.reflection = game_end_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// game_end_msg

// optional int32 state = 1;
void game_end_msg::clear_state() {
  state_ = 0;
}
::google::protobuf::int32 game_end_msg::state() const {
  // @@protoc_insertion_point(field_get:msg.game_end_msg.state)
  return state_;
}
void game_end_msg::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:msg.game_end_msg.state)
}

inline const game_end_msg* game_end_msg::internal_default_instance() {
  return &game_end_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sit_up_msg::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sit_up_msg::sit_up_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.sit_up_msg)
}

void sit_up_msg::InitAsDefaultInstance() {
}

sit_up_msg::sit_up_msg(const sit_up_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.sit_up_msg)
}

void sit_up_msg::SharedCtor() {
  uid_ = 0;
  _cached_size_ = 0;
}

sit_up_msg::~sit_up_msg() {
  // @@protoc_insertion_point(destructor:msg.sit_up_msg)
  SharedDtor();
}

void sit_up_msg::SharedDtor() {
}

void sit_up_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sit_up_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sit_up_msg_descriptor_;
}

const sit_up_msg& sit_up_msg::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<sit_up_msg> sit_up_msg_default_instance_;

sit_up_msg* sit_up_msg::New(::google::protobuf::Arena* arena) const {
  sit_up_msg* n = new sit_up_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void sit_up_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.sit_up_msg)
  uid_ = 0;
}

bool sit_up_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.sit_up_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 uid = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.sit_up_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.sit_up_msg)
  return false;
#undef DO_
}

void sit_up_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.sit_up_msg)
  // optional int32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // @@protoc_insertion_point(serialize_end:msg.sit_up_msg)
}

::google::protobuf::uint8* sit_up_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msg.sit_up_msg)
  // optional int32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:msg.sit_up_msg)
  return target;
}

size_t sit_up_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.sit_up_msg)
  size_t total_size = 0;

  // optional int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sit_up_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.sit_up_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const sit_up_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sit_up_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.sit_up_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.sit_up_msg)
    UnsafeMergeFrom(*source);
  }
}

void sit_up_msg::MergeFrom(const sit_up_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.sit_up_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void sit_up_msg::UnsafeMergeFrom(const sit_up_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void sit_up_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.sit_up_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sit_up_msg::CopyFrom(const sit_up_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.sit_up_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool sit_up_msg::IsInitialized() const {

  return true;
}

void sit_up_msg::Swap(sit_up_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sit_up_msg::InternalSwap(sit_up_msg* other) {
  std::swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata sit_up_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sit_up_msg_descriptor_;
  metadata.reflection = sit_up_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// sit_up_msg

// optional int32 uid = 1;
void sit_up_msg::clear_uid() {
  uid_ = 0;
}
::google::protobuf::int32 sit_up_msg::uid() const {
  // @@protoc_insertion_point(field_get:msg.sit_up_msg.uid)
  return uid_;
}
void sit_up_msg::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg.sit_up_msg.uid)
}

inline const sit_up_msg* sit_up_msg::internal_default_instance() {
  return &sit_up_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sit_down_msg::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sit_down_msg::sit_down_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.sit_down_msg)
}

void sit_down_msg::InitAsDefaultInstance() {
}

sit_down_msg::sit_down_msg(const sit_down_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.sit_down_msg)
}

void sit_down_msg::SharedCtor() {
  uid_ = 0;
  _cached_size_ = 0;
}

sit_down_msg::~sit_down_msg() {
  // @@protoc_insertion_point(destructor:msg.sit_down_msg)
  SharedDtor();
}

void sit_down_msg::SharedDtor() {
}

void sit_down_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sit_down_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sit_down_msg_descriptor_;
}

const sit_down_msg& sit_down_msg::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<sit_down_msg> sit_down_msg_default_instance_;

sit_down_msg* sit_down_msg::New(::google::protobuf::Arena* arena) const {
  sit_down_msg* n = new sit_down_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void sit_down_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.sit_down_msg)
  uid_ = 0;
}

bool sit_down_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.sit_down_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 uid = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.sit_down_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.sit_down_msg)
  return false;
#undef DO_
}

void sit_down_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.sit_down_msg)
  // optional int32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // @@protoc_insertion_point(serialize_end:msg.sit_down_msg)
}

::google::protobuf::uint8* sit_down_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msg.sit_down_msg)
  // optional int32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:msg.sit_down_msg)
  return target;
}

size_t sit_down_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.sit_down_msg)
  size_t total_size = 0;

  // optional int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sit_down_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.sit_down_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const sit_down_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sit_down_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.sit_down_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.sit_down_msg)
    UnsafeMergeFrom(*source);
  }
}

void sit_down_msg::MergeFrom(const sit_down_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.sit_down_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void sit_down_msg::UnsafeMergeFrom(const sit_down_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void sit_down_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.sit_down_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sit_down_msg::CopyFrom(const sit_down_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.sit_down_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool sit_down_msg::IsInitialized() const {

  return true;
}

void sit_down_msg::Swap(sit_down_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sit_down_msg::InternalSwap(sit_down_msg* other) {
  std::swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata sit_down_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sit_down_msg_descriptor_;
  metadata.reflection = sit_down_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// sit_down_msg

// optional int32 uid = 1;
void sit_down_msg::clear_uid() {
  uid_ = 0;
}
::google::protobuf::int32 sit_down_msg::uid() const {
  // @@protoc_insertion_point(field_get:msg.sit_down_msg.uid)
  return uid_;
}
void sit_down_msg::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg.sit_down_msg.uid)
}

inline const sit_down_msg* sit_down_msg::internal_default_instance() {
  return &sit_down_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg

// @@protoc_insertion_point(global_scope)
