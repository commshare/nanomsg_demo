// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform.proto

#ifndef PROTOBUF_platform_2eproto__INCLUDED
#define PROTOBUF_platform_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace platform {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_platform_2eproto();
void protobuf_InitDefaults_platform_2eproto();
void protobuf_AssignDesc_platform_2eproto();
void protobuf_ShutdownFile_platform_2eproto();

class cs_msg_chat;
class cs_msg_login;
class cs_msg_logout;
class csc_msg_heartbeat;
class sc_msg_login;
class sc_msg_logout;
class sc_msg_request_userinfo;
class sc_msg_userinfo;

// ===================================================================

class csc_msg_heartbeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.csc_msg_heartbeat) */ {
 public:
  csc_msg_heartbeat();
  virtual ~csc_msg_heartbeat();

  csc_msg_heartbeat(const csc_msg_heartbeat& from);

  inline csc_msg_heartbeat& operator=(const csc_msg_heartbeat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const csc_msg_heartbeat& default_instance();

  static const csc_msg_heartbeat* internal_default_instance();

  void Swap(csc_msg_heartbeat* other);

  // implements Message ----------------------------------------------

  inline csc_msg_heartbeat* New() const { return New(NULL); }

  csc_msg_heartbeat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const csc_msg_heartbeat& from);
  void MergeFrom(const csc_msg_heartbeat& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(csc_msg_heartbeat* other);
  void UnsafeMergeFrom(const csc_msg_heartbeat& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:platform.csc_msg_heartbeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<csc_msg_heartbeat> csc_msg_heartbeat_default_instance_;

// -------------------------------------------------------------------

class cs_msg_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.cs_msg_login) */ {
 public:
  cs_msg_login();
  virtual ~cs_msg_login();

  cs_msg_login(const cs_msg_login& from);

  inline cs_msg_login& operator=(const cs_msg_login& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_msg_login& default_instance();

  static const cs_msg_login* internal_default_instance();

  void Swap(cs_msg_login* other);

  // implements Message ----------------------------------------------

  inline cs_msg_login* New() const { return New(NULL); }

  cs_msg_login* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_msg_login& from);
  void MergeFrom(const cs_msg_login& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(cs_msg_login* other);
  void UnsafeMergeFrom(const cs_msg_login& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 device = 1;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  ::google::protobuf::int32 device() const;
  void set_device(::google::protobuf::int32 value);

  // optional string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string userpsd = 3;
  void clear_userpsd();
  static const int kUserpsdFieldNumber = 3;
  const ::std::string& userpsd() const;
  void set_userpsd(const ::std::string& value);
  void set_userpsd(const char* value);
  void set_userpsd(const char* value, size_t size);
  ::std::string* mutable_userpsd();
  ::std::string* release_userpsd();
  void set_allocated_userpsd(::std::string* userpsd);

  // @@protoc_insertion_point(class_scope:platform.cs_msg_login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr userpsd_;
  ::google::protobuf::int32 device_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<cs_msg_login> cs_msg_login_default_instance_;

// -------------------------------------------------------------------

class sc_msg_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.sc_msg_login) */ {
 public:
  sc_msg_login();
  virtual ~sc_msg_login();

  sc_msg_login(const sc_msg_login& from);

  inline sc_msg_login& operator=(const sc_msg_login& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sc_msg_login& default_instance();

  static const sc_msg_login* internal_default_instance();

  void Swap(sc_msg_login* other);

  // implements Message ----------------------------------------------

  inline sc_msg_login* New() const { return New(NULL); }

  sc_msg_login* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sc_msg_login& from);
  void MergeFrom(const sc_msg_login& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sc_msg_login* other);
  void UnsafeMergeFrom(const sc_msg_login& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:platform.sc_msg_login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sc_msg_login> sc_msg_login_default_instance_;

// -------------------------------------------------------------------

class cs_msg_logout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.cs_msg_logout) */ {
 public:
  cs_msg_logout();
  virtual ~cs_msg_logout();

  cs_msg_logout(const cs_msg_logout& from);

  inline cs_msg_logout& operator=(const cs_msg_logout& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_msg_logout& default_instance();

  static const cs_msg_logout* internal_default_instance();

  void Swap(cs_msg_logout* other);

  // implements Message ----------------------------------------------

  inline cs_msg_logout* New() const { return New(NULL); }

  cs_msg_logout* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_msg_logout& from);
  void MergeFrom(const cs_msg_logout& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(cs_msg_logout* other);
  void UnsafeMergeFrom(const cs_msg_logout& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 device = 1;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  ::google::protobuf::int32 device() const;
  void set_device(::google::protobuf::int32 value);

  // optional int32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:platform.cs_msg_logout)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 device_;
  ::google::protobuf::int32 uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<cs_msg_logout> cs_msg_logout_default_instance_;

// -------------------------------------------------------------------

class sc_msg_logout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.sc_msg_logout) */ {
 public:
  sc_msg_logout();
  virtual ~sc_msg_logout();

  sc_msg_logout(const sc_msg_logout& from);

  inline sc_msg_logout& operator=(const sc_msg_logout& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sc_msg_logout& default_instance();

  static const sc_msg_logout* internal_default_instance();

  void Swap(sc_msg_logout* other);

  // implements Message ----------------------------------------------

  inline sc_msg_logout* New() const { return New(NULL); }

  sc_msg_logout* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sc_msg_logout& from);
  void MergeFrom(const sc_msg_logout& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sc_msg_logout* other);
  void UnsafeMergeFrom(const sc_msg_logout& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:platform.sc_msg_logout)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sc_msg_logout> sc_msg_logout_default_instance_;

// -------------------------------------------------------------------

class cs_msg_chat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.cs_msg_chat) */ {
 public:
  cs_msg_chat();
  virtual ~cs_msg_chat();

  cs_msg_chat(const cs_msg_chat& from);

  inline cs_msg_chat& operator=(const cs_msg_chat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_msg_chat& default_instance();

  static const cs_msg_chat* internal_default_instance();

  void Swap(cs_msg_chat* other);

  // implements Message ----------------------------------------------

  inline cs_msg_chat* New() const { return New(NULL); }

  cs_msg_chat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_msg_chat& from);
  void MergeFrom(const cs_msg_chat& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(cs_msg_chat* other);
  void UnsafeMergeFrom(const cs_msg_chat& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 device = 1;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  ::google::protobuf::int32 device() const;
  void set_device(::google::protobuf::int32 value);

  // optional int32 from_uid = 2;
  void clear_from_uid();
  static const int kFromUidFieldNumber = 2;
  ::google::protobuf::int32 from_uid() const;
  void set_from_uid(::google::protobuf::int32 value);

  // optional int32 to_uid = 3;
  void clear_to_uid();
  static const int kToUidFieldNumber = 3;
  ::google::protobuf::int32 to_uid() const;
  void set_to_uid(::google::protobuf::int32 value);

  // optional string msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:platform.cs_msg_chat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 device_;
  ::google::protobuf::int32 from_uid_;
  ::google::protobuf::int32 to_uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<cs_msg_chat> cs_msg_chat_default_instance_;

// -------------------------------------------------------------------

class sc_msg_request_userinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.sc_msg_request_userinfo) */ {
 public:
  sc_msg_request_userinfo();
  virtual ~sc_msg_request_userinfo();

  sc_msg_request_userinfo(const sc_msg_request_userinfo& from);

  inline sc_msg_request_userinfo& operator=(const sc_msg_request_userinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sc_msg_request_userinfo& default_instance();

  static const sc_msg_request_userinfo* internal_default_instance();

  void Swap(sc_msg_request_userinfo* other);

  // implements Message ----------------------------------------------

  inline sc_msg_request_userinfo* New() const { return New(NULL); }

  sc_msg_request_userinfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sc_msg_request_userinfo& from);
  void MergeFrom(const sc_msg_request_userinfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sc_msg_request_userinfo* other);
  void UnsafeMergeFrom(const sc_msg_request_userinfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:platform.sc_msg_request_userinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sc_msg_request_userinfo> sc_msg_request_userinfo_default_instance_;

// -------------------------------------------------------------------

class sc_msg_userinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platform.sc_msg_userinfo) */ {
 public:
  sc_msg_userinfo();
  virtual ~sc_msg_userinfo();

  sc_msg_userinfo(const sc_msg_userinfo& from);

  inline sc_msg_userinfo& operator=(const sc_msg_userinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sc_msg_userinfo& default_instance();

  static const sc_msg_userinfo* internal_default_instance();

  void Swap(sc_msg_userinfo* other);

  // implements Message ----------------------------------------------

  inline sc_msg_userinfo* New() const { return New(NULL); }

  sc_msg_userinfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sc_msg_userinfo& from);
  void MergeFrom(const sc_msg_userinfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sc_msg_userinfo* other);
  void UnsafeMergeFrom(const sc_msg_userinfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional int32 age = 2;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional int32 sex = 3;
  void clear_sex();
  static const int kSexFieldNumber = 3;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string address = 5;
  void clear_address();
  static const int kAddressFieldNumber = 5;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:platform.sc_msg_userinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 sex_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_platform_2eproto_impl();
  friend void  protobuf_AddDesc_platform_2eproto_impl();
  friend void protobuf_AssignDesc_platform_2eproto();
  friend void protobuf_ShutdownFile_platform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<sc_msg_userinfo> sc_msg_userinfo_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// csc_msg_heartbeat

// optional int64 time = 1;
inline void csc_msg_heartbeat::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 csc_msg_heartbeat::time() const {
  // @@protoc_insertion_point(field_get:platform.csc_msg_heartbeat.time)
  return time_;
}
inline void csc_msg_heartbeat::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:platform.csc_msg_heartbeat.time)
}

inline const csc_msg_heartbeat* csc_msg_heartbeat::internal_default_instance() {
  return &csc_msg_heartbeat_default_instance_.get();
}
// -------------------------------------------------------------------

// cs_msg_login

// optional int32 device = 1;
inline void cs_msg_login::clear_device() {
  device_ = 0;
}
inline ::google::protobuf::int32 cs_msg_login::device() const {
  // @@protoc_insertion_point(field_get:platform.cs_msg_login.device)
  return device_;
}
inline void cs_msg_login::set_device(::google::protobuf::int32 value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:platform.cs_msg_login.device)
}

// optional string username = 2;
inline void cs_msg_login::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cs_msg_login::username() const {
  // @@protoc_insertion_point(field_get:platform.cs_msg_login.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cs_msg_login::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.cs_msg_login.username)
}
inline void cs_msg_login::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.cs_msg_login.username)
}
inline void cs_msg_login::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.cs_msg_login.username)
}
inline ::std::string* cs_msg_login::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:platform.cs_msg_login.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cs_msg_login::release_username() {
  // @@protoc_insertion_point(field_release:platform.cs_msg_login.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cs_msg_login::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:platform.cs_msg_login.username)
}

// optional string userpsd = 3;
inline void cs_msg_login::clear_userpsd() {
  userpsd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cs_msg_login::userpsd() const {
  // @@protoc_insertion_point(field_get:platform.cs_msg_login.userpsd)
  return userpsd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cs_msg_login::set_userpsd(const ::std::string& value) {
  
  userpsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.cs_msg_login.userpsd)
}
inline void cs_msg_login::set_userpsd(const char* value) {
  
  userpsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.cs_msg_login.userpsd)
}
inline void cs_msg_login::set_userpsd(const char* value, size_t size) {
  
  userpsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.cs_msg_login.userpsd)
}
inline ::std::string* cs_msg_login::mutable_userpsd() {
  
  // @@protoc_insertion_point(field_mutable:platform.cs_msg_login.userpsd)
  return userpsd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cs_msg_login::release_userpsd() {
  // @@protoc_insertion_point(field_release:platform.cs_msg_login.userpsd)
  
  return userpsd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cs_msg_login::set_allocated_userpsd(::std::string* userpsd) {
  if (userpsd != NULL) {
    
  } else {
    
  }
  userpsd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userpsd);
  // @@protoc_insertion_point(field_set_allocated:platform.cs_msg_login.userpsd)
}

inline const cs_msg_login* cs_msg_login::internal_default_instance() {
  return &cs_msg_login_default_instance_.get();
}
// -------------------------------------------------------------------

// sc_msg_login

// optional string msg = 1;
inline void sc_msg_login::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& sc_msg_login::msg() const {
  // @@protoc_insertion_point(field_get:platform.sc_msg_login.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sc_msg_login::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.sc_msg_login.msg)
}
inline void sc_msg_login::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.sc_msg_login.msg)
}
inline void sc_msg_login::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.sc_msg_login.msg)
}
inline ::std::string* sc_msg_login::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:platform.sc_msg_login.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sc_msg_login::release_msg() {
  // @@protoc_insertion_point(field_release:platform.sc_msg_login.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sc_msg_login::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:platform.sc_msg_login.msg)
}

inline const sc_msg_login* sc_msg_login::internal_default_instance() {
  return &sc_msg_login_default_instance_.get();
}
// -------------------------------------------------------------------

// cs_msg_logout

// optional int32 device = 1;
inline void cs_msg_logout::clear_device() {
  device_ = 0;
}
inline ::google::protobuf::int32 cs_msg_logout::device() const {
  // @@protoc_insertion_point(field_get:platform.cs_msg_logout.device)
  return device_;
}
inline void cs_msg_logout::set_device(::google::protobuf::int32 value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:platform.cs_msg_logout.device)
}

// optional int32 uid = 2;
inline void cs_msg_logout::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 cs_msg_logout::uid() const {
  // @@protoc_insertion_point(field_get:platform.cs_msg_logout.uid)
  return uid_;
}
inline void cs_msg_logout::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:platform.cs_msg_logout.uid)
}

inline const cs_msg_logout* cs_msg_logout::internal_default_instance() {
  return &cs_msg_logout_default_instance_.get();
}
// -------------------------------------------------------------------

// sc_msg_logout

// optional string msg = 1;
inline void sc_msg_logout::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& sc_msg_logout::msg() const {
  // @@protoc_insertion_point(field_get:platform.sc_msg_logout.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sc_msg_logout::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.sc_msg_logout.msg)
}
inline void sc_msg_logout::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.sc_msg_logout.msg)
}
inline void sc_msg_logout::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.sc_msg_logout.msg)
}
inline ::std::string* sc_msg_logout::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:platform.sc_msg_logout.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sc_msg_logout::release_msg() {
  // @@protoc_insertion_point(field_release:platform.sc_msg_logout.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sc_msg_logout::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:platform.sc_msg_logout.msg)
}

inline const sc_msg_logout* sc_msg_logout::internal_default_instance() {
  return &sc_msg_logout_default_instance_.get();
}
// -------------------------------------------------------------------

// cs_msg_chat

// optional int32 device = 1;
inline void cs_msg_chat::clear_device() {
  device_ = 0;
}
inline ::google::protobuf::int32 cs_msg_chat::device() const {
  // @@protoc_insertion_point(field_get:platform.cs_msg_chat.device)
  return device_;
}
inline void cs_msg_chat::set_device(::google::protobuf::int32 value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:platform.cs_msg_chat.device)
}

// optional int32 from_uid = 2;
inline void cs_msg_chat::clear_from_uid() {
  from_uid_ = 0;
}
inline ::google::protobuf::int32 cs_msg_chat::from_uid() const {
  // @@protoc_insertion_point(field_get:platform.cs_msg_chat.from_uid)
  return from_uid_;
}
inline void cs_msg_chat::set_from_uid(::google::protobuf::int32 value) {
  
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:platform.cs_msg_chat.from_uid)
}

// optional int32 to_uid = 3;
inline void cs_msg_chat::clear_to_uid() {
  to_uid_ = 0;
}
inline ::google::protobuf::int32 cs_msg_chat::to_uid() const {
  // @@protoc_insertion_point(field_get:platform.cs_msg_chat.to_uid)
  return to_uid_;
}
inline void cs_msg_chat::set_to_uid(::google::protobuf::int32 value) {
  
  to_uid_ = value;
  // @@protoc_insertion_point(field_set:platform.cs_msg_chat.to_uid)
}

// optional string msg = 4;
inline void cs_msg_chat::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cs_msg_chat::msg() const {
  // @@protoc_insertion_point(field_get:platform.cs_msg_chat.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cs_msg_chat::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.cs_msg_chat.msg)
}
inline void cs_msg_chat::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.cs_msg_chat.msg)
}
inline void cs_msg_chat::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.cs_msg_chat.msg)
}
inline ::std::string* cs_msg_chat::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:platform.cs_msg_chat.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cs_msg_chat::release_msg() {
  // @@protoc_insertion_point(field_release:platform.cs_msg_chat.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cs_msg_chat::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:platform.cs_msg_chat.msg)
}

inline const cs_msg_chat* cs_msg_chat::internal_default_instance() {
  return &cs_msg_chat_default_instance_.get();
}
// -------------------------------------------------------------------

// sc_msg_request_userinfo

// optional int32 uid = 1;
inline void sc_msg_request_userinfo::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 sc_msg_request_userinfo::uid() const {
  // @@protoc_insertion_point(field_get:platform.sc_msg_request_userinfo.uid)
  return uid_;
}
inline void sc_msg_request_userinfo::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:platform.sc_msg_request_userinfo.uid)
}

inline const sc_msg_request_userinfo* sc_msg_request_userinfo::internal_default_instance() {
  return &sc_msg_request_userinfo_default_instance_.get();
}
// -------------------------------------------------------------------

// sc_msg_userinfo

// optional int32 uid = 1;
inline void sc_msg_userinfo::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 sc_msg_userinfo::uid() const {
  // @@protoc_insertion_point(field_get:platform.sc_msg_userinfo.uid)
  return uid_;
}
inline void sc_msg_userinfo::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:platform.sc_msg_userinfo.uid)
}

// optional int32 age = 2;
inline void sc_msg_userinfo::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 sc_msg_userinfo::age() const {
  // @@protoc_insertion_point(field_get:platform.sc_msg_userinfo.age)
  return age_;
}
inline void sc_msg_userinfo::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:platform.sc_msg_userinfo.age)
}

// optional int32 sex = 3;
inline void sc_msg_userinfo::clear_sex() {
  sex_ = 0;
}
inline ::google::protobuf::int32 sc_msg_userinfo::sex() const {
  // @@protoc_insertion_point(field_get:platform.sc_msg_userinfo.sex)
  return sex_;
}
inline void sc_msg_userinfo::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:platform.sc_msg_userinfo.sex)
}

// optional string name = 4;
inline void sc_msg_userinfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& sc_msg_userinfo::name() const {
  // @@protoc_insertion_point(field_get:platform.sc_msg_userinfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sc_msg_userinfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.sc_msg_userinfo.name)
}
inline void sc_msg_userinfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.sc_msg_userinfo.name)
}
inline void sc_msg_userinfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.sc_msg_userinfo.name)
}
inline ::std::string* sc_msg_userinfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:platform.sc_msg_userinfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sc_msg_userinfo::release_name() {
  // @@protoc_insertion_point(field_release:platform.sc_msg_userinfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sc_msg_userinfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:platform.sc_msg_userinfo.name)
}

// optional string address = 5;
inline void sc_msg_userinfo::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& sc_msg_userinfo::address() const {
  // @@protoc_insertion_point(field_get:platform.sc_msg_userinfo.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sc_msg_userinfo::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platform.sc_msg_userinfo.address)
}
inline void sc_msg_userinfo::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platform.sc_msg_userinfo.address)
}
inline void sc_msg_userinfo::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platform.sc_msg_userinfo.address)
}
inline ::std::string* sc_msg_userinfo::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:platform.sc_msg_userinfo.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sc_msg_userinfo::release_address() {
  // @@protoc_insertion_point(field_release:platform.sc_msg_userinfo.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sc_msg_userinfo::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:platform.sc_msg_userinfo.address)
}

inline const sc_msg_userinfo* sc_msg_userinfo::internal_default_instance() {
  return &sc_msg_userinfo_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace platform

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_platform_2eproto__INCLUDED
