// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace lm {

namespace {

const ::google::protobuf::Descriptor* connected_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  connected_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* net_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  net_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* chat_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  chat_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* join_room_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  join_room_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* leave_room_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  leave_room_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* sit_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sit_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserInfo_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfo_msg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_lm_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_lm_2eproto() {
  protobuf_AddDesc_lm_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "lm.proto");
  GOOGLE_CHECK(file != NULL);
  connected_msg_descriptor_ = file->message_type(0);
  static const int connected_msg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(connected_msg, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(connected_msg, from_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(connected_msg, recv_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(connected_msg, msg_),
  };
  connected_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      connected_msg_descriptor_,
      connected_msg::internal_default_instance(),
      connected_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(connected_msg, _has_bits_),
      -1,
      -1,
      sizeof(connected_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(connected_msg, _internal_metadata_));
  net_msg_descriptor_ = file->message_type(1);
  static const int net_msg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, v_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, s_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, data_),
  };
  net_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      net_msg_descriptor_,
      net_msg::internal_default_instance(),
      net_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, _has_bits_),
      -1,
      -1,
      sizeof(net_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(net_msg, _internal_metadata_));
  chat_msg_descriptor_ = file->message_type(2);
  static const int chat_msg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chat_msg, from_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chat_msg, recv_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chat_msg, msg_),
  };
  chat_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      chat_msg_descriptor_,
      chat_msg::internal_default_instance(),
      chat_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chat_msg, _has_bits_),
      -1,
      -1,
      sizeof(chat_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chat_msg, _internal_metadata_));
  join_room_msg_descriptor_ = file->message_type(3);
  static const int join_room_msg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(join_room_msg, u_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(join_room_msg, msg_),
  };
  join_room_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      join_room_msg_descriptor_,
      join_room_msg::internal_default_instance(),
      join_room_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(join_room_msg, _has_bits_),
      -1,
      -1,
      sizeof(join_room_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(join_room_msg, _internal_metadata_));
  leave_room_msg_descriptor_ = file->message_type(4);
  static const int leave_room_msg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(leave_room_msg, u_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(leave_room_msg, msg_),
  };
  leave_room_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      leave_room_msg_descriptor_,
      leave_room_msg::internal_default_instance(),
      leave_room_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(leave_room_msg, _has_bits_),
      -1,
      -1,
      sizeof(leave_room_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(leave_room_msg, _internal_metadata_));
  sit_msg_descriptor_ = file->message_type(5);
  static const int sit_msg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sit_msg, u_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sit_msg, msg_),
  };
  sit_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      sit_msg_descriptor_,
      sit_msg::internal_default_instance(),
      sit_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sit_msg, _has_bits_),
      -1,
      -1,
      sizeof(sit_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sit_msg, _internal_metadata_));
  UserInfo_msg_descriptor_ = file->message_type(6);
  static const int UserInfo_msg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_msg, u_age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_msg, u_sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_msg, u_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_msg, u_address_),
  };
  UserInfo_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserInfo_msg_descriptor_,
      UserInfo_msg::internal_default_instance(),
      UserInfo_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_msg, _has_bits_),
      -1,
      -1,
      sizeof(UserInfo_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_msg, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_lm_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      connected_msg_descriptor_, connected_msg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      net_msg_descriptor_, net_msg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      chat_msg_descriptor_, chat_msg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      join_room_msg_descriptor_, join_room_msg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      leave_room_msg_descriptor_, leave_room_msg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      sit_msg_descriptor_, sit_msg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserInfo_msg_descriptor_, UserInfo_msg::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_lm_2eproto() {
  connected_msg_default_instance_.Shutdown();
  delete connected_msg_reflection_;
  net_msg_default_instance_.Shutdown();
  delete net_msg_reflection_;
  chat_msg_default_instance_.Shutdown();
  delete chat_msg_reflection_;
  join_room_msg_default_instance_.Shutdown();
  delete join_room_msg_reflection_;
  leave_room_msg_default_instance_.Shutdown();
  delete leave_room_msg_reflection_;
  sit_msg_default_instance_.Shutdown();
  delete sit_msg_reflection_;
  UserInfo_msg_default_instance_.Shutdown();
  delete UserInfo_msg_reflection_;
}

void protobuf_InitDefaults_lm_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  connected_msg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  net_msg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  chat_msg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  join_room_msg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  leave_room_msg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  sit_msg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UserInfo_msg_default_instance_.DefaultConstruct();
  connected_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
  net_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
  chat_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
  join_room_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
  leave_room_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
  sit_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
  UserInfo_msg_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_lm_2eproto_once_);
void protobuf_InitDefaults_lm_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_lm_2eproto_once_,
                 &protobuf_InitDefaults_lm_2eproto_impl);
}
void protobuf_AddDesc_lm_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_lm_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\010lm.proto\022\002lm\"K\n\rconnected_msg\022\013\n\003cmd\030\001"
    " \002(\005\022\017\n\007from_id\030\002 \002(\005\022\017\n\007recv_id\030\003 \002(\005\022\013"
    "\n\003msg\030\004 \002(\t\"K\n\007net_msg\022\t\n\001v\030\001 \002(\005\022\014\n\004m_i"
    "d\030\002 \002(\005\022\014\n\004s_id\030\003 \002(\005\022\013\n\003opt\030\004 \002(\005\022\014\n\004da"
    "ta\030\005 \001(\t\"9\n\010chat_msg\022\017\n\007from_id\030\001 \002(\005\022\017\n"
    "\007recv_id\030\002 \002(\005\022\013\n\003msg\030\003 \002(\t\"*\n\rjoin_room"
    "_msg\022\014\n\004u_id\030\001 \002(\005\022\013\n\003msg\030\002 \002(\t\"+\n\016leave"
    "_room_msg\022\014\n\004u_id\030\001 \002(\005\022\013\n\003msg\030\002 \002(\t\"$\n\007"
    "sit_msg\022\014\n\004u_id\030\001 \002(\005\022\013\n\003msg\030\002 \002(\t\"O\n\014Us"
    "erInfo_msg\022\r\n\005u_age\030\001 \002(\005\022\r\n\005u_sex\030\002 \002(\005"
    "\022\016\n\006u_name\030\003 \002(\t\022\021\n\tu_address\030\004 \002(\t", 435);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lm.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_lm_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_lm_2eproto_once_);
void protobuf_AddDesc_lm_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_lm_2eproto_once_,
                 &protobuf_AddDesc_lm_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_lm_2eproto {
  StaticDescriptorInitializer_lm_2eproto() {
    protobuf_AddDesc_lm_2eproto();
  }
} static_descriptor_initializer_lm_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int connected_msg::kCmdFieldNumber;
const int connected_msg::kFromIdFieldNumber;
const int connected_msg::kRecvIdFieldNumber;
const int connected_msg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

connected_msg::connected_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_lm_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:lm.connected_msg)
}

void connected_msg::InitAsDefaultInstance() {
}

connected_msg::connected_msg(const connected_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:lm.connected_msg)
}

void connected_msg::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_, 0, reinterpret_cast<char*>(&recv_id_) -
    reinterpret_cast<char*>(&cmd_) + sizeof(recv_id_));
}

connected_msg::~connected_msg() {
  // @@protoc_insertion_point(destructor:lm.connected_msg)
  SharedDtor();
}

void connected_msg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void connected_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* connected_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return connected_msg_descriptor_;
}

const connected_msg& connected_msg::default_instance() {
  protobuf_InitDefaults_lm_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<connected_msg> connected_msg_default_instance_;

connected_msg* connected_msg::New(::google::protobuf::Arena* arena) const {
  connected_msg* n = new connected_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void connected_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:lm.connected_msg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(connected_msg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<connected_msg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(cmd_, recv_id_);
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool connected_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lm.connected_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 cmd = 1;
      case 1: {
        if (tag == 8) {
          set_has_cmd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_from_id;
        break;
      }

      // required int32 from_id = 2;
      case 2: {
        if (tag == 16) {
         parse_from_id:
          set_has_from_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_recv_id;
        break;
      }

      // required int32 recv_id = 3;
      case 3: {
        if (tag == 24) {
         parse_recv_id:
          set_has_recv_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recv_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_msg;
        break;
      }

      // required string msg = 4;
      case 4: {
        if (tag == 34) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lm.connected_msg.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lm.connected_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lm.connected_msg)
  return false;
#undef DO_
}

void connected_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lm.connected_msg)
  // required int32 cmd = 1;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmd(), output);
  }

  // required int32 from_id = 2;
  if (has_from_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->from_id(), output);
  }

  // required int32 recv_id = 3;
  if (has_recv_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->recv_id(), output);
  }

  // required string msg = 4;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.connected_msg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lm.connected_msg)
}

::google::protobuf::uint8* connected_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lm.connected_msg)
  // required int32 cmd = 1;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmd(), target);
  }

  // required int32 from_id = 2;
  if (has_from_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->from_id(), target);
  }

  // required int32 recv_id = 3;
  if (has_recv_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->recv_id(), target);
  }

  // required string msg = 4;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.connected_msg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lm.connected_msg)
  return target;
}

size_t connected_msg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:lm.connected_msg)
  size_t total_size = 0;

  if (has_cmd()) {
    // required int32 cmd = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmd());
  }

  if (has_from_id()) {
    // required int32 from_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_id());
  }

  if (has_recv_id()) {
    // required int32 recv_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->recv_id());
  }

  if (has_msg()) {
    // required string msg = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
size_t connected_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lm.connected_msg)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 cmd = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmd());

    // required int32 from_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_id());

    // required int32 recv_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->recv_id());

    // required string msg = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void connected_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lm.connected_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const connected_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const connected_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lm.connected_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lm.connected_msg)
    UnsafeMergeFrom(*source);
  }
}

void connected_msg::MergeFrom(const connected_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lm.connected_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void connected_msg::UnsafeMergeFrom(const connected_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_from_id()) {
      set_from_id(from.from_id());
    }
    if (from.has_recv_id()) {
      set_recv_id(from.recv_id());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void connected_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lm.connected_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void connected_msg::CopyFrom(const connected_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lm.connected_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool connected_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void connected_msg::Swap(connected_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void connected_msg::InternalSwap(connected_msg* other) {
  std::swap(cmd_, other->cmd_);
  std::swap(from_id_, other->from_id_);
  std::swap(recv_id_, other->recv_id_);
  msg_.Swap(&other->msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata connected_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = connected_msg_descriptor_;
  metadata.reflection = connected_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// connected_msg

// required int32 cmd = 1;
bool connected_msg::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void connected_msg::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
void connected_msg::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
void connected_msg::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
::google::protobuf::int32 connected_msg::cmd() const {
  // @@protoc_insertion_point(field_get:lm.connected_msg.cmd)
  return cmd_;
}
void connected_msg::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:lm.connected_msg.cmd)
}

// required int32 from_id = 2;
bool connected_msg::has_from_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void connected_msg::set_has_from_id() {
  _has_bits_[0] |= 0x00000002u;
}
void connected_msg::clear_has_from_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void connected_msg::clear_from_id() {
  from_id_ = 0;
  clear_has_from_id();
}
::google::protobuf::int32 connected_msg::from_id() const {
  // @@protoc_insertion_point(field_get:lm.connected_msg.from_id)
  return from_id_;
}
void connected_msg::set_from_id(::google::protobuf::int32 value) {
  set_has_from_id();
  from_id_ = value;
  // @@protoc_insertion_point(field_set:lm.connected_msg.from_id)
}

// required int32 recv_id = 3;
bool connected_msg::has_recv_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void connected_msg::set_has_recv_id() {
  _has_bits_[0] |= 0x00000004u;
}
void connected_msg::clear_has_recv_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void connected_msg::clear_recv_id() {
  recv_id_ = 0;
  clear_has_recv_id();
}
::google::protobuf::int32 connected_msg::recv_id() const {
  // @@protoc_insertion_point(field_get:lm.connected_msg.recv_id)
  return recv_id_;
}
void connected_msg::set_recv_id(::google::protobuf::int32 value) {
  set_has_recv_id();
  recv_id_ = value;
  // @@protoc_insertion_point(field_set:lm.connected_msg.recv_id)
}

// required string msg = 4;
bool connected_msg::has_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void connected_msg::set_has_msg() {
  _has_bits_[0] |= 0x00000008u;
}
void connected_msg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
void connected_msg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
const ::std::string& connected_msg::msg() const {
  // @@protoc_insertion_point(field_get:lm.connected_msg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void connected_msg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lm.connected_msg.msg)
}
void connected_msg::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lm.connected_msg.msg)
}
void connected_msg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lm.connected_msg.msg)
}
::std::string* connected_msg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:lm.connected_msg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* connected_msg::release_msg() {
  // @@protoc_insertion_point(field_release:lm.connected_msg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void connected_msg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:lm.connected_msg.msg)
}

inline const connected_msg* connected_msg::internal_default_instance() {
  return &connected_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int net_msg::kVFieldNumber;
const int net_msg::kMIdFieldNumber;
const int net_msg::kSIdFieldNumber;
const int net_msg::kOptFieldNumber;
const int net_msg::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

net_msg::net_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_lm_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:lm.net_msg)
}

void net_msg::InitAsDefaultInstance() {
}

net_msg::net_msg(const net_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:lm.net_msg)
}

void net_msg::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&v_, 0, reinterpret_cast<char*>(&opt_) -
    reinterpret_cast<char*>(&v_) + sizeof(opt_));
}

net_msg::~net_msg() {
  // @@protoc_insertion_point(destructor:lm.net_msg)
  SharedDtor();
}

void net_msg::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void net_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* net_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return net_msg_descriptor_;
}

const net_msg& net_msg::default_instance() {
  protobuf_InitDefaults_lm_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<net_msg> net_msg_default_instance_;

net_msg* net_msg::New(::google::protobuf::Arena* arena) const {
  net_msg* n = new net_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void net_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:lm.net_msg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(net_msg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<net_msg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(v_, opt_);
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool net_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lm.net_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 v = 1;
      case 1: {
        if (tag == 8) {
          set_has_v();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &v_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // required int32 m_id = 2;
      case 2: {
        if (tag == 16) {
         parse_m_id:
          set_has_m_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_s_id;
        break;
      }

      // required int32 s_id = 3;
      case 3: {
        if (tag == 24) {
         parse_s_id:
          set_has_s_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_opt;
        break;
      }

      // required int32 opt = 4;
      case 4: {
        if (tag == 32) {
         parse_opt:
          set_has_opt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // optional string data = 5;
      case 5: {
        if (tag == 42) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lm.net_msg.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lm.net_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lm.net_msg)
  return false;
#undef DO_
}

void net_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lm.net_msg)
  // required int32 v = 1;
  if (has_v()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->v(), output);
  }

  // required int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  // required int32 s_id = 3;
  if (has_s_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->s_id(), output);
  }

  // required int32 opt = 4;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->opt(), output);
  }

  // optional string data = 5;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.net_msg.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lm.net_msg)
}

::google::protobuf::uint8* net_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lm.net_msg)
  // required int32 v = 1;
  if (has_v()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->v(), target);
  }

  // required int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  // required int32 s_id = 3;
  if (has_s_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->s_id(), target);
  }

  // required int32 opt = 4;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->opt(), target);
  }

  // optional string data = 5;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.net_msg.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lm.net_msg)
  return target;
}

size_t net_msg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:lm.net_msg)
  size_t total_size = 0;

  if (has_v()) {
    // required int32 v = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->v());
  }

  if (has_m_id()) {
    // required int32 m_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m_id());
  }

  if (has_s_id()) {
    // required int32 s_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->s_id());
  }

  if (has_opt()) {
    // required int32 opt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->opt());
  }

  return total_size;
}
size_t net_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lm.net_msg)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 v = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->v());

    // required int32 m_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m_id());

    // required int32 s_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->s_id());

    // required int32 opt = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->opt());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string data = 5;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void net_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lm.net_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const net_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const net_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lm.net_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lm.net_msg)
    UnsafeMergeFrom(*source);
  }
}

void net_msg::MergeFrom(const net_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lm.net_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void net_msg::UnsafeMergeFrom(const net_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_v()) {
      set_v(from.v());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_s_id()) {
      set_s_id(from.s_id());
    }
    if (from.has_opt()) {
      set_opt(from.opt());
    }
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void net_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lm.net_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void net_msg::CopyFrom(const net_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lm.net_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool net_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void net_msg::Swap(net_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void net_msg::InternalSwap(net_msg* other) {
  std::swap(v_, other->v_);
  std::swap(m_id_, other->m_id_);
  std::swap(s_id_, other->s_id_);
  std::swap(opt_, other->opt_);
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata net_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = net_msg_descriptor_;
  metadata.reflection = net_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// net_msg

// required int32 v = 1;
bool net_msg::has_v() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void net_msg::set_has_v() {
  _has_bits_[0] |= 0x00000001u;
}
void net_msg::clear_has_v() {
  _has_bits_[0] &= ~0x00000001u;
}
void net_msg::clear_v() {
  v_ = 0;
  clear_has_v();
}
::google::protobuf::int32 net_msg::v() const {
  // @@protoc_insertion_point(field_get:lm.net_msg.v)
  return v_;
}
void net_msg::set_v(::google::protobuf::int32 value) {
  set_has_v();
  v_ = value;
  // @@protoc_insertion_point(field_set:lm.net_msg.v)
}

// required int32 m_id = 2;
bool net_msg::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void net_msg::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
void net_msg::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void net_msg::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
::google::protobuf::int32 net_msg::m_id() const {
  // @@protoc_insertion_point(field_get:lm.net_msg.m_id)
  return m_id_;
}
void net_msg::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
  // @@protoc_insertion_point(field_set:lm.net_msg.m_id)
}

// required int32 s_id = 3;
bool net_msg::has_s_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void net_msg::set_has_s_id() {
  _has_bits_[0] |= 0x00000004u;
}
void net_msg::clear_has_s_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void net_msg::clear_s_id() {
  s_id_ = 0;
  clear_has_s_id();
}
::google::protobuf::int32 net_msg::s_id() const {
  // @@protoc_insertion_point(field_get:lm.net_msg.s_id)
  return s_id_;
}
void net_msg::set_s_id(::google::protobuf::int32 value) {
  set_has_s_id();
  s_id_ = value;
  // @@protoc_insertion_point(field_set:lm.net_msg.s_id)
}

// required int32 opt = 4;
bool net_msg::has_opt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void net_msg::set_has_opt() {
  _has_bits_[0] |= 0x00000008u;
}
void net_msg::clear_has_opt() {
  _has_bits_[0] &= ~0x00000008u;
}
void net_msg::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
::google::protobuf::int32 net_msg::opt() const {
  // @@protoc_insertion_point(field_get:lm.net_msg.opt)
  return opt_;
}
void net_msg::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
  // @@protoc_insertion_point(field_set:lm.net_msg.opt)
}

// optional string data = 5;
bool net_msg::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void net_msg::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
void net_msg::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
void net_msg::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
const ::std::string& net_msg::data() const {
  // @@protoc_insertion_point(field_get:lm.net_msg.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void net_msg::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lm.net_msg.data)
}
void net_msg::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lm.net_msg.data)
}
void net_msg::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lm.net_msg.data)
}
::std::string* net_msg::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:lm.net_msg.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* net_msg::release_data() {
  // @@protoc_insertion_point(field_release:lm.net_msg.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void net_msg::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:lm.net_msg.data)
}

inline const net_msg* net_msg::internal_default_instance() {
  return &net_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int chat_msg::kFromIdFieldNumber;
const int chat_msg::kRecvIdFieldNumber;
const int chat_msg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

chat_msg::chat_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_lm_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:lm.chat_msg)
}

void chat_msg::InitAsDefaultInstance() {
}

chat_msg::chat_msg(const chat_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:lm.chat_msg)
}

void chat_msg::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_id_, 0, reinterpret_cast<char*>(&recv_id_) -
    reinterpret_cast<char*>(&from_id_) + sizeof(recv_id_));
}

chat_msg::~chat_msg() {
  // @@protoc_insertion_point(destructor:lm.chat_msg)
  SharedDtor();
}

void chat_msg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void chat_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* chat_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return chat_msg_descriptor_;
}

const chat_msg& chat_msg::default_instance() {
  protobuf_InitDefaults_lm_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<chat_msg> chat_msg_default_instance_;

chat_msg* chat_msg::New(::google::protobuf::Arena* arena) const {
  chat_msg* n = new chat_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void chat_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:lm.chat_msg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(chat_msg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<chat_msg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(from_id_, recv_id_);
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool chat_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lm.chat_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 from_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_from_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_recv_id;
        break;
      }

      // required int32 recv_id = 2;
      case 2: {
        if (tag == 16) {
         parse_recv_id:
          set_has_recv_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recv_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msg;
        break;
      }

      // required string msg = 3;
      case 3: {
        if (tag == 26) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lm.chat_msg.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lm.chat_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lm.chat_msg)
  return false;
#undef DO_
}

void chat_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lm.chat_msg)
  // required int32 from_id = 1;
  if (has_from_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->from_id(), output);
  }

  // required int32 recv_id = 2;
  if (has_recv_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->recv_id(), output);
  }

  // required string msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.chat_msg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lm.chat_msg)
}

::google::protobuf::uint8* chat_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lm.chat_msg)
  // required int32 from_id = 1;
  if (has_from_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->from_id(), target);
  }

  // required int32 recv_id = 2;
  if (has_recv_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->recv_id(), target);
  }

  // required string msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.chat_msg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lm.chat_msg)
  return target;
}

size_t chat_msg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:lm.chat_msg)
  size_t total_size = 0;

  if (has_from_id()) {
    // required int32 from_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_id());
  }

  if (has_recv_id()) {
    // required int32 recv_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->recv_id());
  }

  if (has_msg()) {
    // required string msg = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
size_t chat_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lm.chat_msg)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 from_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_id());

    // required int32 recv_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->recv_id());

    // required string msg = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void chat_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lm.chat_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const chat_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const chat_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lm.chat_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lm.chat_msg)
    UnsafeMergeFrom(*source);
  }
}

void chat_msg::MergeFrom(const chat_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lm.chat_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void chat_msg::UnsafeMergeFrom(const chat_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_from_id()) {
      set_from_id(from.from_id());
    }
    if (from.has_recv_id()) {
      set_recv_id(from.recv_id());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void chat_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lm.chat_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void chat_msg::CopyFrom(const chat_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lm.chat_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool chat_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void chat_msg::Swap(chat_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void chat_msg::InternalSwap(chat_msg* other) {
  std::swap(from_id_, other->from_id_);
  std::swap(recv_id_, other->recv_id_);
  msg_.Swap(&other->msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata chat_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = chat_msg_descriptor_;
  metadata.reflection = chat_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// chat_msg

// required int32 from_id = 1;
bool chat_msg::has_from_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void chat_msg::set_has_from_id() {
  _has_bits_[0] |= 0x00000001u;
}
void chat_msg::clear_has_from_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void chat_msg::clear_from_id() {
  from_id_ = 0;
  clear_has_from_id();
}
::google::protobuf::int32 chat_msg::from_id() const {
  // @@protoc_insertion_point(field_get:lm.chat_msg.from_id)
  return from_id_;
}
void chat_msg::set_from_id(::google::protobuf::int32 value) {
  set_has_from_id();
  from_id_ = value;
  // @@protoc_insertion_point(field_set:lm.chat_msg.from_id)
}

// required int32 recv_id = 2;
bool chat_msg::has_recv_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void chat_msg::set_has_recv_id() {
  _has_bits_[0] |= 0x00000002u;
}
void chat_msg::clear_has_recv_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void chat_msg::clear_recv_id() {
  recv_id_ = 0;
  clear_has_recv_id();
}
::google::protobuf::int32 chat_msg::recv_id() const {
  // @@protoc_insertion_point(field_get:lm.chat_msg.recv_id)
  return recv_id_;
}
void chat_msg::set_recv_id(::google::protobuf::int32 value) {
  set_has_recv_id();
  recv_id_ = value;
  // @@protoc_insertion_point(field_set:lm.chat_msg.recv_id)
}

// required string msg = 3;
bool chat_msg::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void chat_msg::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
void chat_msg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
void chat_msg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
const ::std::string& chat_msg::msg() const {
  // @@protoc_insertion_point(field_get:lm.chat_msg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void chat_msg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lm.chat_msg.msg)
}
void chat_msg::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lm.chat_msg.msg)
}
void chat_msg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lm.chat_msg.msg)
}
::std::string* chat_msg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:lm.chat_msg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* chat_msg::release_msg() {
  // @@protoc_insertion_point(field_release:lm.chat_msg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void chat_msg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:lm.chat_msg.msg)
}

inline const chat_msg* chat_msg::internal_default_instance() {
  return &chat_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int join_room_msg::kUIdFieldNumber;
const int join_room_msg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

join_room_msg::join_room_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_lm_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:lm.join_room_msg)
}

void join_room_msg::InitAsDefaultInstance() {
}

join_room_msg::join_room_msg(const join_room_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:lm.join_room_msg)
}

void join_room_msg::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  u_id_ = 0;
}

join_room_msg::~join_room_msg() {
  // @@protoc_insertion_point(destructor:lm.join_room_msg)
  SharedDtor();
}

void join_room_msg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void join_room_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* join_room_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return join_room_msg_descriptor_;
}

const join_room_msg& join_room_msg::default_instance() {
  protobuf_InitDefaults_lm_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<join_room_msg> join_room_msg_default_instance_;

join_room_msg* join_room_msg::New(::google::protobuf::Arena* arena) const {
  join_room_msg* n = new join_room_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void join_room_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:lm.join_room_msg)
  if (_has_bits_[0 / 32] & 3u) {
    u_id_ = 0;
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool join_room_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lm.join_room_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 u_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_u_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lm.join_room_msg.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lm.join_room_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lm.join_room_msg)
  return false;
#undef DO_
}

void join_room_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lm.join_room_msg)
  // required int32 u_id = 1;
  if (has_u_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->u_id(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.join_room_msg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lm.join_room_msg)
}

::google::protobuf::uint8* join_room_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lm.join_room_msg)
  // required int32 u_id = 1;
  if (has_u_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->u_id(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.join_room_msg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lm.join_room_msg)
  return target;
}

size_t join_room_msg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:lm.join_room_msg)
  size_t total_size = 0;

  if (has_u_id()) {
    // required int32 u_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->u_id());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
size_t join_room_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lm.join_room_msg)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 u_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->u_id());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void join_room_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lm.join_room_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const join_room_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const join_room_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lm.join_room_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lm.join_room_msg)
    UnsafeMergeFrom(*source);
  }
}

void join_room_msg::MergeFrom(const join_room_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lm.join_room_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void join_room_msg::UnsafeMergeFrom(const join_room_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_u_id()) {
      set_u_id(from.u_id());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void join_room_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lm.join_room_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void join_room_msg::CopyFrom(const join_room_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lm.join_room_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool join_room_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void join_room_msg::Swap(join_room_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void join_room_msg::InternalSwap(join_room_msg* other) {
  std::swap(u_id_, other->u_id_);
  msg_.Swap(&other->msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata join_room_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = join_room_msg_descriptor_;
  metadata.reflection = join_room_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// join_room_msg

// required int32 u_id = 1;
bool join_room_msg::has_u_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void join_room_msg::set_has_u_id() {
  _has_bits_[0] |= 0x00000001u;
}
void join_room_msg::clear_has_u_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void join_room_msg::clear_u_id() {
  u_id_ = 0;
  clear_has_u_id();
}
::google::protobuf::int32 join_room_msg::u_id() const {
  // @@protoc_insertion_point(field_get:lm.join_room_msg.u_id)
  return u_id_;
}
void join_room_msg::set_u_id(::google::protobuf::int32 value) {
  set_has_u_id();
  u_id_ = value;
  // @@protoc_insertion_point(field_set:lm.join_room_msg.u_id)
}

// required string msg = 2;
bool join_room_msg::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void join_room_msg::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void join_room_msg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void join_room_msg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
const ::std::string& join_room_msg::msg() const {
  // @@protoc_insertion_point(field_get:lm.join_room_msg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void join_room_msg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lm.join_room_msg.msg)
}
void join_room_msg::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lm.join_room_msg.msg)
}
void join_room_msg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lm.join_room_msg.msg)
}
::std::string* join_room_msg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:lm.join_room_msg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* join_room_msg::release_msg() {
  // @@protoc_insertion_point(field_release:lm.join_room_msg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void join_room_msg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:lm.join_room_msg.msg)
}

inline const join_room_msg* join_room_msg::internal_default_instance() {
  return &join_room_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int leave_room_msg::kUIdFieldNumber;
const int leave_room_msg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

leave_room_msg::leave_room_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_lm_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:lm.leave_room_msg)
}

void leave_room_msg::InitAsDefaultInstance() {
}

leave_room_msg::leave_room_msg(const leave_room_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:lm.leave_room_msg)
}

void leave_room_msg::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  u_id_ = 0;
}

leave_room_msg::~leave_room_msg() {
  // @@protoc_insertion_point(destructor:lm.leave_room_msg)
  SharedDtor();
}

void leave_room_msg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void leave_room_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* leave_room_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return leave_room_msg_descriptor_;
}

const leave_room_msg& leave_room_msg::default_instance() {
  protobuf_InitDefaults_lm_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<leave_room_msg> leave_room_msg_default_instance_;

leave_room_msg* leave_room_msg::New(::google::protobuf::Arena* arena) const {
  leave_room_msg* n = new leave_room_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void leave_room_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:lm.leave_room_msg)
  if (_has_bits_[0 / 32] & 3u) {
    u_id_ = 0;
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool leave_room_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lm.leave_room_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 u_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_u_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lm.leave_room_msg.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lm.leave_room_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lm.leave_room_msg)
  return false;
#undef DO_
}

void leave_room_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lm.leave_room_msg)
  // required int32 u_id = 1;
  if (has_u_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->u_id(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.leave_room_msg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lm.leave_room_msg)
}

::google::protobuf::uint8* leave_room_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lm.leave_room_msg)
  // required int32 u_id = 1;
  if (has_u_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->u_id(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.leave_room_msg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lm.leave_room_msg)
  return target;
}

size_t leave_room_msg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:lm.leave_room_msg)
  size_t total_size = 0;

  if (has_u_id()) {
    // required int32 u_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->u_id());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
size_t leave_room_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lm.leave_room_msg)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 u_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->u_id());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void leave_room_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lm.leave_room_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const leave_room_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const leave_room_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lm.leave_room_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lm.leave_room_msg)
    UnsafeMergeFrom(*source);
  }
}

void leave_room_msg::MergeFrom(const leave_room_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lm.leave_room_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void leave_room_msg::UnsafeMergeFrom(const leave_room_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_u_id()) {
      set_u_id(from.u_id());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void leave_room_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lm.leave_room_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void leave_room_msg::CopyFrom(const leave_room_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lm.leave_room_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool leave_room_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void leave_room_msg::Swap(leave_room_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void leave_room_msg::InternalSwap(leave_room_msg* other) {
  std::swap(u_id_, other->u_id_);
  msg_.Swap(&other->msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata leave_room_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = leave_room_msg_descriptor_;
  metadata.reflection = leave_room_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// leave_room_msg

// required int32 u_id = 1;
bool leave_room_msg::has_u_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void leave_room_msg::set_has_u_id() {
  _has_bits_[0] |= 0x00000001u;
}
void leave_room_msg::clear_has_u_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void leave_room_msg::clear_u_id() {
  u_id_ = 0;
  clear_has_u_id();
}
::google::protobuf::int32 leave_room_msg::u_id() const {
  // @@protoc_insertion_point(field_get:lm.leave_room_msg.u_id)
  return u_id_;
}
void leave_room_msg::set_u_id(::google::protobuf::int32 value) {
  set_has_u_id();
  u_id_ = value;
  // @@protoc_insertion_point(field_set:lm.leave_room_msg.u_id)
}

// required string msg = 2;
bool leave_room_msg::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void leave_room_msg::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void leave_room_msg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void leave_room_msg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
const ::std::string& leave_room_msg::msg() const {
  // @@protoc_insertion_point(field_get:lm.leave_room_msg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void leave_room_msg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lm.leave_room_msg.msg)
}
void leave_room_msg::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lm.leave_room_msg.msg)
}
void leave_room_msg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lm.leave_room_msg.msg)
}
::std::string* leave_room_msg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:lm.leave_room_msg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* leave_room_msg::release_msg() {
  // @@protoc_insertion_point(field_release:lm.leave_room_msg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void leave_room_msg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:lm.leave_room_msg.msg)
}

inline const leave_room_msg* leave_room_msg::internal_default_instance() {
  return &leave_room_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sit_msg::kUIdFieldNumber;
const int sit_msg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sit_msg::sit_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_lm_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:lm.sit_msg)
}

void sit_msg::InitAsDefaultInstance() {
}

sit_msg::sit_msg(const sit_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:lm.sit_msg)
}

void sit_msg::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  u_id_ = 0;
}

sit_msg::~sit_msg() {
  // @@protoc_insertion_point(destructor:lm.sit_msg)
  SharedDtor();
}

void sit_msg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void sit_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sit_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sit_msg_descriptor_;
}

const sit_msg& sit_msg::default_instance() {
  protobuf_InitDefaults_lm_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<sit_msg> sit_msg_default_instance_;

sit_msg* sit_msg::New(::google::protobuf::Arena* arena) const {
  sit_msg* n = new sit_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void sit_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:lm.sit_msg)
  if (_has_bits_[0 / 32] & 3u) {
    u_id_ = 0;
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool sit_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lm.sit_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 u_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_u_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lm.sit_msg.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lm.sit_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lm.sit_msg)
  return false;
#undef DO_
}

void sit_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lm.sit_msg)
  // required int32 u_id = 1;
  if (has_u_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->u_id(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.sit_msg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lm.sit_msg)
}

::google::protobuf::uint8* sit_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lm.sit_msg)
  // required int32 u_id = 1;
  if (has_u_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->u_id(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.sit_msg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lm.sit_msg)
  return target;
}

size_t sit_msg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:lm.sit_msg)
  size_t total_size = 0;

  if (has_u_id()) {
    // required int32 u_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->u_id());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
size_t sit_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lm.sit_msg)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 u_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->u_id());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sit_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lm.sit_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const sit_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sit_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lm.sit_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lm.sit_msg)
    UnsafeMergeFrom(*source);
  }
}

void sit_msg::MergeFrom(const sit_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lm.sit_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void sit_msg::UnsafeMergeFrom(const sit_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_u_id()) {
      set_u_id(from.u_id());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void sit_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lm.sit_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sit_msg::CopyFrom(const sit_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lm.sit_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool sit_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void sit_msg::Swap(sit_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sit_msg::InternalSwap(sit_msg* other) {
  std::swap(u_id_, other->u_id_);
  msg_.Swap(&other->msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata sit_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sit_msg_descriptor_;
  metadata.reflection = sit_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// sit_msg

// required int32 u_id = 1;
bool sit_msg::has_u_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void sit_msg::set_has_u_id() {
  _has_bits_[0] |= 0x00000001u;
}
void sit_msg::clear_has_u_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void sit_msg::clear_u_id() {
  u_id_ = 0;
  clear_has_u_id();
}
::google::protobuf::int32 sit_msg::u_id() const {
  // @@protoc_insertion_point(field_get:lm.sit_msg.u_id)
  return u_id_;
}
void sit_msg::set_u_id(::google::protobuf::int32 value) {
  set_has_u_id();
  u_id_ = value;
  // @@protoc_insertion_point(field_set:lm.sit_msg.u_id)
}

// required string msg = 2;
bool sit_msg::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void sit_msg::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void sit_msg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void sit_msg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
const ::std::string& sit_msg::msg() const {
  // @@protoc_insertion_point(field_get:lm.sit_msg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sit_msg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lm.sit_msg.msg)
}
void sit_msg::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lm.sit_msg.msg)
}
void sit_msg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lm.sit_msg.msg)
}
::std::string* sit_msg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:lm.sit_msg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* sit_msg::release_msg() {
  // @@protoc_insertion_point(field_release:lm.sit_msg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void sit_msg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:lm.sit_msg.msg)
}

inline const sit_msg* sit_msg::internal_default_instance() {
  return &sit_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo_msg::kUAgeFieldNumber;
const int UserInfo_msg::kUSexFieldNumber;
const int UserInfo_msg::kUNameFieldNumber;
const int UserInfo_msg::kUAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo_msg::UserInfo_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_lm_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:lm.UserInfo_msg)
}

void UserInfo_msg::InitAsDefaultInstance() {
}

UserInfo_msg::UserInfo_msg(const UserInfo_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:lm.UserInfo_msg)
}

void UserInfo_msg::SharedCtor() {
  _cached_size_ = 0;
  u_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  u_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&u_age_, 0, reinterpret_cast<char*>(&u_sex_) -
    reinterpret_cast<char*>(&u_age_) + sizeof(u_sex_));
}

UserInfo_msg::~UserInfo_msg() {
  // @@protoc_insertion_point(destructor:lm.UserInfo_msg)
  SharedDtor();
}

void UserInfo_msg::SharedDtor() {
  u_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  u_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_msg_descriptor_;
}

const UserInfo_msg& UserInfo_msg::default_instance() {
  protobuf_InitDefaults_lm_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UserInfo_msg> UserInfo_msg_default_instance_;

UserInfo_msg* UserInfo_msg::New(::google::protobuf::Arena* arena) const {
  UserInfo_msg* n = new UserInfo_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:lm.UserInfo_msg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UserInfo_msg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UserInfo_msg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(u_age_, u_sex_);
    if (has_u_name()) {
      u_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_u_address()) {
      u_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UserInfo_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lm.UserInfo_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 u_age = 1;
      case 1: {
        if (tag == 8) {
          set_has_u_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_age_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_u_sex;
        break;
      }

      // required int32 u_sex = 2;
      case 2: {
        if (tag == 16) {
         parse_u_sex:
          set_has_u_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_sex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_u_name;
        break;
      }

      // required string u_name = 3;
      case 3: {
        if (tag == 26) {
         parse_u_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_u_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->u_name().data(), this->u_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lm.UserInfo_msg.u_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_u_address;
        break;
      }

      // required string u_address = 4;
      case 4: {
        if (tag == 34) {
         parse_u_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_u_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->u_address().data(), this->u_address().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lm.UserInfo_msg.u_address");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lm.UserInfo_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lm.UserInfo_msg)
  return false;
#undef DO_
}

void UserInfo_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lm.UserInfo_msg)
  // required int32 u_age = 1;
  if (has_u_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->u_age(), output);
  }

  // required int32 u_sex = 2;
  if (has_u_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->u_sex(), output);
  }

  // required string u_name = 3;
  if (has_u_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->u_name().data(), this->u_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.UserInfo_msg.u_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->u_name(), output);
  }

  // required string u_address = 4;
  if (has_u_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->u_address().data(), this->u_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.UserInfo_msg.u_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->u_address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lm.UserInfo_msg)
}

::google::protobuf::uint8* UserInfo_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lm.UserInfo_msg)
  // required int32 u_age = 1;
  if (has_u_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->u_age(), target);
  }

  // required int32 u_sex = 2;
  if (has_u_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->u_sex(), target);
  }

  // required string u_name = 3;
  if (has_u_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->u_name().data(), this->u_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.UserInfo_msg.u_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->u_name(), target);
  }

  // required string u_address = 4;
  if (has_u_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->u_address().data(), this->u_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lm.UserInfo_msg.u_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->u_address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lm.UserInfo_msg)
  return target;
}

size_t UserInfo_msg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:lm.UserInfo_msg)
  size_t total_size = 0;

  if (has_u_age()) {
    // required int32 u_age = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->u_age());
  }

  if (has_u_sex()) {
    // required int32 u_sex = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->u_sex());
  }

  if (has_u_name()) {
    // required string u_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->u_name());
  }

  if (has_u_address()) {
    // required string u_address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->u_address());
  }

  return total_size;
}
size_t UserInfo_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lm.UserInfo_msg)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 u_age = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->u_age());

    // required int32 u_sex = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->u_sex());

    // required string u_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->u_name());

    // required string u_address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->u_address());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lm.UserInfo_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UserInfo_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lm.UserInfo_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lm.UserInfo_msg)
    UnsafeMergeFrom(*source);
  }
}

void UserInfo_msg::MergeFrom(const UserInfo_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lm.UserInfo_msg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UserInfo_msg::UnsafeMergeFrom(const UserInfo_msg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_u_age()) {
      set_u_age(from.u_age());
    }
    if (from.has_u_sex()) {
      set_u_sex(from.u_sex());
    }
    if (from.has_u_name()) {
      set_has_u_name();
      u_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.u_name_);
    }
    if (from.has_u_address()) {
      set_has_u_address();
      u_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.u_address_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void UserInfo_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lm.UserInfo_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo_msg::CopyFrom(const UserInfo_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lm.UserInfo_msg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UserInfo_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void UserInfo_msg::Swap(UserInfo_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo_msg::InternalSwap(UserInfo_msg* other) {
  std::swap(u_age_, other->u_age_);
  std::swap(u_sex_, other->u_sex_);
  u_name_.Swap(&other->u_name_);
  u_address_.Swap(&other->u_address_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfo_msg_descriptor_;
  metadata.reflection = UserInfo_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo_msg

// required int32 u_age = 1;
bool UserInfo_msg::has_u_age() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserInfo_msg::set_has_u_age() {
  _has_bits_[0] |= 0x00000001u;
}
void UserInfo_msg::clear_has_u_age() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserInfo_msg::clear_u_age() {
  u_age_ = 0;
  clear_has_u_age();
}
::google::protobuf::int32 UserInfo_msg::u_age() const {
  // @@protoc_insertion_point(field_get:lm.UserInfo_msg.u_age)
  return u_age_;
}
void UserInfo_msg::set_u_age(::google::protobuf::int32 value) {
  set_has_u_age();
  u_age_ = value;
  // @@protoc_insertion_point(field_set:lm.UserInfo_msg.u_age)
}

// required int32 u_sex = 2;
bool UserInfo_msg::has_u_sex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserInfo_msg::set_has_u_sex() {
  _has_bits_[0] |= 0x00000002u;
}
void UserInfo_msg::clear_has_u_sex() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserInfo_msg::clear_u_sex() {
  u_sex_ = 0;
  clear_has_u_sex();
}
::google::protobuf::int32 UserInfo_msg::u_sex() const {
  // @@protoc_insertion_point(field_get:lm.UserInfo_msg.u_sex)
  return u_sex_;
}
void UserInfo_msg::set_u_sex(::google::protobuf::int32 value) {
  set_has_u_sex();
  u_sex_ = value;
  // @@protoc_insertion_point(field_set:lm.UserInfo_msg.u_sex)
}

// required string u_name = 3;
bool UserInfo_msg::has_u_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UserInfo_msg::set_has_u_name() {
  _has_bits_[0] |= 0x00000004u;
}
void UserInfo_msg::clear_has_u_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void UserInfo_msg::clear_u_name() {
  u_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_u_name();
}
const ::std::string& UserInfo_msg::u_name() const {
  // @@protoc_insertion_point(field_get:lm.UserInfo_msg.u_name)
  return u_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo_msg::set_u_name(const ::std::string& value) {
  set_has_u_name();
  u_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lm.UserInfo_msg.u_name)
}
void UserInfo_msg::set_u_name(const char* value) {
  set_has_u_name();
  u_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lm.UserInfo_msg.u_name)
}
void UserInfo_msg::set_u_name(const char* value, size_t size) {
  set_has_u_name();
  u_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lm.UserInfo_msg.u_name)
}
::std::string* UserInfo_msg::mutable_u_name() {
  set_has_u_name();
  // @@protoc_insertion_point(field_mutable:lm.UserInfo_msg.u_name)
  return u_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo_msg::release_u_name() {
  // @@protoc_insertion_point(field_release:lm.UserInfo_msg.u_name)
  clear_has_u_name();
  return u_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo_msg::set_allocated_u_name(::std::string* u_name) {
  if (u_name != NULL) {
    set_has_u_name();
  } else {
    clear_has_u_name();
  }
  u_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), u_name);
  // @@protoc_insertion_point(field_set_allocated:lm.UserInfo_msg.u_name)
}

// required string u_address = 4;
bool UserInfo_msg::has_u_address() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UserInfo_msg::set_has_u_address() {
  _has_bits_[0] |= 0x00000008u;
}
void UserInfo_msg::clear_has_u_address() {
  _has_bits_[0] &= ~0x00000008u;
}
void UserInfo_msg::clear_u_address() {
  u_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_u_address();
}
const ::std::string& UserInfo_msg::u_address() const {
  // @@protoc_insertion_point(field_get:lm.UserInfo_msg.u_address)
  return u_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo_msg::set_u_address(const ::std::string& value) {
  set_has_u_address();
  u_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lm.UserInfo_msg.u_address)
}
void UserInfo_msg::set_u_address(const char* value) {
  set_has_u_address();
  u_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lm.UserInfo_msg.u_address)
}
void UserInfo_msg::set_u_address(const char* value, size_t size) {
  set_has_u_address();
  u_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lm.UserInfo_msg.u_address)
}
::std::string* UserInfo_msg::mutable_u_address() {
  set_has_u_address();
  // @@protoc_insertion_point(field_mutable:lm.UserInfo_msg.u_address)
  return u_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo_msg::release_u_address() {
  // @@protoc_insertion_point(field_release:lm.UserInfo_msg.u_address)
  clear_has_u_address();
  return u_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo_msg::set_allocated_u_address(::std::string* u_address) {
  if (u_address != NULL) {
    set_has_u_address();
  } else {
    clear_has_u_address();
  }
  u_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), u_address);
  // @@protoc_insertion_point(field_set_allocated:lm.UserInfo_msg.u_address)
}

inline const UserInfo_msg* UserInfo_msg::internal_default_instance() {
  return &UserInfo_msg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace lm

// @@protoc_insertion_point(global_scope)
